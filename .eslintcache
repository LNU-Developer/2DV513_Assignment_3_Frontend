[{"/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/App.tsx":"1","/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/reportWebVitals.ts":"2","/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/components/patients/AddPatientModal.tsx":"3","/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/components/layout/AddButton.tsx":"4","/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/index.tsx":"5","/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/components/patients/PatientList.tsx":"6","/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/components/patients/EditPatientModal.tsx":"7","/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/components/layout/Navbar.tsx":"8"},{"size":513,"mtime":1610031837702,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1606942838114,"results":"11","hashOfConfig":"10"},{"size":7312,"mtime":1609593042402,"results":"12","hashOfConfig":"10"},{"size":683,"mtime":1610031928441,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1607450936386,"results":"14","hashOfConfig":"10"},{"size":3426,"mtime":1610036522454,"results":"15","hashOfConfig":"10"},{"size":7656,"mtime":1609593042403,"results":"16","hashOfConfig":"10"},{"size":266,"mtime":1610035996409,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mst5qj",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/App.tsx",[],"/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/reportWebVitals.ts",[],"/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/components/patients/AddPatientModal.tsx",["37","38"],"import React, { useState } from 'react';\n\nconst AddPatientModal = (props: { updatePatientList: any }) => {\n    const [FirstName, setFirstName] = useState('');\n    const [LastName, setLastName] = useState('');\n    const [SocialSecurityNumber, setSSN] = useState('');\n    const [PhoneNo, setPhone] = useState('');\n    const [Adress, setAddress] = useState('');\n    const [PostalNo, setPostalNo] = useState('');\n    const [City, setCity] = useState('');\n    const [Email, setEmail] = useState('');\n    const [IdentificationType, setIdentificationType] = useState('');\n    const [CreatedBy, setCreatedBy] = useState(null);\n\n    const submit = async (e: any) => {\n        e.preventDefault();\n        try {\n            const body = {\n                FirstName,\n                LastName,\n                SocialSecurityNumber,\n                PhoneNo,\n                Adress,\n                PostalNo,\n                City,\n                Email,\n                IdentificationType,\n                CreatedBy,\n            };\n            const response = await fetch(\n                process.env.REACT_APP_API_URL + '/patient/add',\n                {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(body),\n                }\n            );\n            props.updatePatientList();\n        } catch (error) {\n            console.log(error);\n        }\n\n        // if (firstName === \"\" || lastName === \"\" || ssn === \"\") {\n        //   M.toast({ html: \"Please enter a firstname, lastname and social security number\" });\n        // } else {\n        //   console.log(firstName, lastName);\n        //   // Clear fields\n        //   setFirstName(\"\");\n        //   setLastName(\"\");\n        //   setSSN(\"\");\n        // }\n    };\n\n    return (\n        <div id='add-patient-modal' className='modal'>\n            <div className='modal-content'>\n                <h4>New Patient</h4>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='firstName'\n                            value={FirstName}\n                            onChange={(e) => setFirstName(e.target.value)}\n                        />\n                        <label htmlFor='firstName' className='active'>\n                            First Name\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='lastName'\n                            value={LastName}\n                            onChange={(e) => setLastName(e.target.value)}\n                        />\n                        <label htmlFor='lastName' className='active'>\n                            Last Name\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='email'\n                            value={Email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                        <label htmlFor='email' className='active'>\n                            Email\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='ssn'\n                            value={SocialSecurityNumber}\n                            onChange={(e) => setSSN(e.target.value)}\n                        />\n                        <label\n                            htmlFor='SocialSecurityNumber'\n                            className='active'>\n                            Social Security Number\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='phone'\n                            value={PhoneNo}\n                            onChange={(e) => setPhone(e.target.value)}\n                        />\n                        <label htmlFor='phone' className='active'>\n                            Phone Number\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='adress'\n                            value={Adress}\n                            onChange={(e) => setAddress(e.target.value)}\n                        />\n                        <label htmlFor='adress' className='active'>\n                            Adress\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='postalNo'\n                            value={PostalNo}\n                            onChange={(e) => setPostalNo(e.target.value)}\n                        />\n                        <label htmlFor='postalNo' className='active'>\n                            Postal Number\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='city'\n                            value={City}\n                            onChange={(e) => setCity(e.target.value)}\n                        />\n                        <label htmlFor='city' className='active'>\n                            City\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='identificationType'\n                            value={IdentificationType}\n                            onChange={(e) =>\n                                setIdentificationType(e.target.value)\n                            }\n                        />\n                        <label htmlFor='identificationType' className='active'>\n                            Identification Type\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div className='modal-footer'>\n                <a\n                    href='#!'\n                    onClick={submit}\n                    className='modal-close waves-effect blue waves-light btn'>\n                    Enter\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default AddPatientModal;\n","/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/components/layout/AddButton.tsx",["39"],"/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/index.tsx",[],["40","41"],"/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/components/patients/PatientList.tsx",["42","43"],"/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/components/patients/EditPatientModal.tsx",["44"],"import React, { useState } from 'react';\nimport Patient from '../interfaces/patient.interface';\n\nconst EditPatientModal = (props: {\n    patient: Patient;\n    updatePatientList: any;\n}) => {\n    const [PatientId] = useState(props.patient.PatientId);\n    const [FirstName, setFirstName] = useState(props.patient.FirstName);\n    const [LastName, setLastName] = useState(props.patient.LastName);\n    const [SocialSecurityNumber, setSSN] = useState(\n        props.patient.SocialSecurityNumber\n    );\n    const [PhoneNo, setPhone] = useState(props.patient.PhoneNo);\n    const [Adress, setAddress] = useState(props.patient.Adress);\n    const [PostalNo, setPostalNo] = useState(props.patient.PostalNo);\n    const [City, setCity] = useState(props.patient.City);\n    const [Email, setEmail] = useState(props.patient.Email);\n    const [IdentificationType, setIdentificationType] = useState(\n        props.patient.IdentificationType\n    );\n    const [CreatedBy, setCreatedBy] = useState(null);\n\n    const updatePatient = async (e: any) => {\n        e.preventDefault();\n        try {\n            const body = {\n                PatientId,\n                FirstName,\n                LastName,\n                SocialSecurityNumber,\n                PhoneNo,\n                Adress,\n                PostalNo,\n                City,\n                Email,\n                IdentificationType,\n                CreatedBy,\n            };\n            await fetch(`${process.env.REACT_APP_API_URL}/patient/edit`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(body),\n            });\n            props.updatePatientList();\n        } catch (error) {\n            console.log(error);\n        }\n\n        // if (firstName === \"\" || lastName === \"\" || ssn === \"\") {\n        //   M.toast({ html: \"Please enter a firstname, lastname and social security number\" });\n        // } else {\n        //   console.log(firstName, lastName);\n        //   // Clear fields\n        //   setFirstName(\"\");\n        //   setLastName(\"\");\n        //   setSSN(\"\");\n        // }\n    };\n\n    return (\n        <div id={props.patient.SocialSecurityNumber} className='modal'>\n            <div className='modal-content'>\n                <h4>Edit Patient</h4>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='firstName'\n                            value={FirstName}\n                            onChange={(e) => setFirstName(e.target.value)}\n                        />\n                        <label htmlFor='firstName' className='active'>\n                            First Name\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='lastName'\n                            value={LastName}\n                            onChange={(e) => setLastName(e.target.value)}\n                        />\n                        <label htmlFor='lastName' className='active'>\n                            Last Name\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='email'\n                            value={Email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                        <label htmlFor='email' className='active'>\n                            Email\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='ssn'\n                            value={SocialSecurityNumber}\n                            onChange={(e) => setSSN(e.target.value)}\n                        />\n                        <label\n                            htmlFor='SocialSecurityNumber'\n                            className='active'>\n                            Social Security Number\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='phone'\n                            value={PhoneNo}\n                            onChange={(e) => setPhone(e.target.value)}\n                        />\n                        <label htmlFor='phone' className='active'>\n                            Phone Number\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='adress'\n                            value={Adress}\n                            onChange={(e) => setAddress(e.target.value)}\n                        />\n                        <label htmlFor='adress' className='active'>\n                            Adress\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='postalNo'\n                            value={PostalNo}\n                            onChange={(e) => setPostalNo(e.target.value)}\n                        />\n                        <label htmlFor='postalNo' className='active'>\n                            Postal Number\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='city'\n                            value={City}\n                            onChange={(e) => setCity(e.target.value)}\n                        />\n                        <label htmlFor='city' className='active'>\n                            City\n                        </label>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='input-field'>\n                        <input\n                            type='text'\n                            name='identificationType'\n                            value={IdentificationType}\n                            onChange={(e) =>\n                                setIdentificationType(e.target.value)\n                            }\n                        />\n                        <label htmlFor='identificationType' className='active'>\n                            Identification Type\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div className='modal-footer'>\n                <a\n                    href='#!'\n                    onClick={updatePatient}\n                    className='modal-close waves-effect blue waves-light btn'>\n                    Enter\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default EditPatientModal;\n","/Users/demir/Desktop/School/LNU/2dv513/assignment3/journal-app/src/components/layout/Navbar.tsx",["45"],{"ruleId":"46","severity":1,"message":"47","line":13,"column":23,"nodeType":"48","messageId":"49","endLine":13,"endColumn":35},{"ruleId":"46","severity":1,"message":"50","line":30,"column":19,"nodeType":"48","messageId":"49","endLine":30,"endColumn":27},{"ruleId":"51","severity":1,"message":"52","line":6,"column":7,"nodeType":"53","endLine":6,"endColumn":82},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"46","severity":1,"message":"58","line":6,"column":10,"nodeType":"48","messageId":"49","endLine":6,"endColumn":23},{"ruleId":"46","severity":1,"message":"59","line":6,"column":25,"nodeType":"48","messageId":"49","endLine":6,"endColumn":36},{"ruleId":"46","severity":1,"message":"47","line":22,"column":23,"nodeType":"48","messageId":"49","endLine":22,"endColumn":35},{"ruleId":"51","severity":1,"message":"52","line":7,"column":7,"nodeType":"53","endLine":7,"endColumn":71},"@typescript-eslint/no-unused-vars","'setCreatedBy' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"'FaChevronDown' is defined but never used.","'FaChevronUp' is defined but never used.","no-global-assign","no-unsafe-negation"]